name: Telegram Bot with HTML, CSS, JS Integration, and README Generation

on:
  push:
    branches:
      - main  # Trigger on push to the main branch
  workflow_dispatch:  # Allow manual trigger from GitHub UI

jobs:
  bot_html_and_readme_generation:
    runs-on: ubuntu-latest
    concurrency:
      group: 'bot-generation'
      cancel-in-progress: true  # Cancel in-progress runs to ensure only one run at a time

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set up Python environment
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      # Step 4: Generate `index.html` with Bot Info and educational content
      - name: Generate index.html with Bot Info and Explanation
        run: |
          echo "Generating index.html with bot information and how Telegram bots work..."

          # Use Python to generate HTML using BOT_TOKEN secret
          python -c "
import os
import requests

# Retrieve BOT_TOKEN from GitHub Secrets
bot_token = os.getenv('BOT_TOKEN')
url = f'https://api.telegram.org/bot{bot_token}/getMe'

# Make an API request to Telegram Bot API to fetch bot info
response = requests.get(url)
data = response.json()

# Extract bot details from the response
bot_name = data.get('result', {}).get('username', 'Unknown Bot')
bot_id = data.get('result', {}).get('id', 'Unknown ID')

# HTML content with bot details and basic commands explanation
html_content = f'''
<!DOCTYPE html>
<html lang='en'>
<head>
    <meta charset='UTF-8'>
    <meta name='viewport' content='width=device-width, initial-scale=1.0'>
    <title>{bot_name} - Telegram Bot</title>
    <style>
        body {{
            font-family: Arial, sans-serif;
            background-color: #f0f4f8;
            color: #333;
            margin: 0;
            padding: 0;
            text-align: center;
        }}
        h1 {{
            color: #4CAF50;
            margin-top: 20px;
        }}
        .container {{
            background-color: #fff;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            padding: 40px;
            border-radius: 8px;
            width: 60%;
            margin: 40px auto;
        }}
        .details {{
            font-size: 1.2em;
            margin-bottom: 20px;
        }}
        .commands {{
            font-size: 1.1em;
            margin-top: 20px;
        }}
        .btn {{
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 1.1em;
        }}
        .btn:hover {{
            background-color: #45a049;
        }}
        .footer {{
            margin-top: 40px;
            font-size: 0.9em;
            color: #888;
        }}
    </style>
</head>
<body>
    <div class="container">
        <h1>{bot_name}</h1>
        <p class="details">Bot ID: {bot_id}</p>
        <p class="details">Telegram Bot: <a href='https://t.me/{bot_name}' target='_blank'>{bot_name}</a></p>
        
        <div class="commands">
            <h3>Bot Commands</h3>
            <ul>
                <li><b>/start</b>: Start interacting with the bot</li>
                <li><b>/help</b>: Get help and instructions</li>
            </ul>
        </div>

        <button class="btn" onclick="alert('This is a placeholder for bot interaction')">Interact with Bot</button>
    </div>

    <div class="footer">
        <p>Learn more about how Telegram bots work with HTML, CSS, and JS.</p>
    </div>
</body>
</html>
"""

# Write the HTML content to index.html
with open('index.html', 'w') as file:
    file.write(html_content)

print('index.html has been generated and saved.')
"
          
      # Step 5: Update README.md with Bot Info and Explanation of Bot Interaction
      - name: Update README.md with Bot Info and Commands
        run: |
          echo "Updating README.md with bot information and commands..."

          # Check if README.md exists, create or update accordingly
          if [ -f "README.md" ]; then
            # Append bot info and commands to the existing README.md
            echo -e "\n## Bot Information\n" >> README.md
            echo -e "Bot Name: [${bot_name}](https://t.me/${bot_name})\n" >> README.md
            echo -e "Bot ID: ${bot_id}\n" >> README.md
            echo -e "### Bot Commands\n" >> README.md
            echo -e "- /start: Start interacting with the bot\n" >> README.md
            echo -e "- /help: Get help and instructions\n" >> README.md
            echo -e "Learn more about how Telegram bots work with HTML, CSS, and JS in the [index.html](index.html) file.\n" >> README.md
          else
            # Create a new README.md if it doesn't exist
            echo "# Bot Information" > README.md
            echo "Bot Name: [${bot_name}](https://t.me/${bot_name})" >> README.md
            echo "Bot ID: ${bot_id}" >> README.md
            echo "### Bot Commands" >> README.md
            echo "- /start: Start interacting with the bot" >> README.md
            echo "- /help: Get help and instructions" >> README.md
            echo "Learn more about how Telegram bots work with HTML, CSS, and JS in the [index.html](index.html) file." >> README.md
          fi

      # Step 6: Create other necessary files (e.g., config files, logs)
      - name: Create Configuration File (Optional)
        run: |
          echo "Creating configuration file..."
          echo "bot_name=${bot_name}" > config.txt
          echo "bot_id=${bot_id}" >> config.txt

      # Step 7: Commit and push the generated files
      - name: Commit and Push changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          # Check if there are changes to commit
          if [[ `git status --porcelain` ]]; then
            git add index.html README.md config.txt  # Add all generated files
            git commit -m "Generated bot files (index.html, README.md, config.txt)"
            git push
          else
            echo "No changes to commit."
          fi

      # Step 8: Run the bot (Optional)
      - name: Run Bot (Optional)
        run: |
          echo "Starting the bot..."
          # Replace with the actual script to run your bot if necessary
          # python bot_script.py  # Example to run your bot
